{"version":3,"sources":["styles.module.css","../../src/index.js","App.js","index.js"],"names":["module","exports","Blob","path","x","random","y","d","p","index","coord","array","bp","componentDidMount","this","render","className","fill","fillColor0","duration","interactive","rest","fillId","onClick","cs","styles","id","stopColor","offset","preserveAspectRatio","viewBox","rotation","key","xmlns","defaultProps","fillColor1","App","container","blob","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.294189c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__d38tt\",\"blob\":\"styles_blob__3Mp0A\"};","import React, { Component } from 'react'\nimport { MorphReplace } from 'react-svg-morph'\nimport cs from 'classnames'\nimport random from 'random'\n\nimport styles from './styles.module.css'\n\nexport class Blob extends Component {\n  static defaultProps = {\n    fill: null,\n    fillColor0: '#ed6ea0',\n    fillColor1: '#ec8c69',\n    duration: 150,\n    interactive: true\n  }\n\n  state = {\n    path: ''\n  }\n\n  componentDidMount() {\n    this.reset()\n  }\n\n  render() {\n    const {\n      className,\n      fill,\n      fillColor0,\n      fillColor1,\n      duration,\n      interactive,\n      ...rest\n    } = this.props\n    const { path } = this.state\n\n    const fillColor00 = fillColor0.replace('#', '')\n    const fillColor11 = fillColor0.replace('#', '')\n    const fillId = `react-blobby-blob-${fillColor00}-${fillColor11}`\n    const onClick = interactive ? this.reset : undefined\n\n    return (\n      <div className={cs(styles.blob, className)} onClick={onClick} {...rest}>\n        {fill || (\n          <svg className={styles.svg}>\n            <defs>\n              <linearGradient id={fillId}>\n                <stop stopColor='#ed6ea0' />\n                <stop offset='1' stopColor='#ec8c69' />\n              </linearGradient>\n            </defs>\n          </svg>\n        )}\n\n        {path && (\n          <MorphReplace\n            preserveAspectRatio='none'\n            viewBox='0 0 100 100'\n            fill={fill || `url(#${fillId})`}\n            rotation='none'\n            duration={duration}\n          >\n            <svg\n              key={path}\n              viewBox='0 0 100 100'\n              xmlns='http://www.w3.org/2000/svg'\n              preserveAspectRatio='none'\n            >\n              <path d={path} />\n            </svg>\n          </MorphReplace>\n        )}\n      </div>\n    )\n  }\n\n  reset = () => {\n    const path = []\n\n    // construct the control points for a blob shape that covers most of\n    // the bounding box of its container\n    path.push({ x: random.float(46, 54), y: random.float(0, 3) })\n    path.push({ x: random.float(5, 10), y: random.float(0, 10) })\n    path.push({ x: random.float(0, 5), y: random.float(30, 60) })\n    path.push({ x: random.float(0, 10), y: random.float(90, 100) })\n    path.push({ x: random.float(40, 60), y: random.float(95, 100) })\n    path.push({ x: random.float(90, 100), y: random.float(90, 100) })\n    path.push({ x: random.float(95, 100), y: random.float(30, 60) })\n    path.push({ x: random.float(90, 100), y: random.float(0, 10) })\n    path.push({ x: path[0].x, y: path[0].y })\n    path.push({ x: path[1].x, y: path[1].y })\n\n    // construct a catmull rom spline from the control points\n    let d = ''\n\n    path.forEach((coord, index, array) => {\n      const p = []\n      if (index === 0) {\n        d += `M${coord.x},${coord.y} `\n\n        p.push(array[array.length - 3])\n        p.push(array[index])\n        p.push(array[index + 1])\n        p.push(array[index + 2])\n      } else if (index === array.length - 2) {\n        return\n        // p.push(array[index - 1])\n        // p.push(array[index])\n        // p.push(array[index + 1])\n        // p.push(array[0])\n      } else if (index === array.length - 1) {\n        return\n        // p.push(array[index - 1])\n        // p.push(array[index])\n        // p.push(array[0])\n        // p.push(array[1])\n      } else {\n        p.push(array[index - 1])\n        p.push(array[index])\n        p.push(array[index + 1])\n        p.push(array[index + 2])\n      }\n\n      const bp = []\n      bp.push({ x: p[1].x, y: p[1].y })\n      bp.push({\n        x: (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n        y: (-p[0].y + 6 * p[1].y + p[2].y) / 6\n      })\n      bp.push({\n        x: (p[1].x + 6 * p[2].x - p[3].x) / 6,\n        y: (p[1].y + 6 * p[2].y - p[3].y) / 6\n      })\n      bp.push({ x: p[2].x, y: p[2].y })\n      d +=\n        'C' +\n        bp[1].x +\n        ',' +\n        bp[1].y +\n        ' ' +\n        bp[2].x +\n        ',' +\n        bp[2].y +\n        ' ' +\n        bp[3].x +\n        ',' +\n        bp[3].y +\n        ' '\n    })\n\n    // d += 'Z'\n\n    this.setState({ path: d })\n  }\n}\n","import React from 'react'\n\nimport { Blob } from 'react-blobby-blob'\nimport 'react-blobby-blob/dist/index.css'\n\nimport styles from './styles.module.css'\n\nconst App = () => {\n  return (\n    <div className={styles.container}>\n      <Blob className={styles.blob} />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}